//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SemoGames.Obstacles.NextWaypointIndexComponent nextWaypointIndex { get { return (SemoGames.Obstacles.NextWaypointIndexComponent)GetComponent(GameComponentsLookup.NextWaypointIndex); } }
    public bool hasNextWaypointIndex { get { return HasComponent(GameComponentsLookup.NextWaypointIndex); } }

    public void AddNextWaypointIndex(int newValue) {
        var index = GameComponentsLookup.NextWaypointIndex;
        var component = (SemoGames.Obstacles.NextWaypointIndexComponent)CreateComponent(index, typeof(SemoGames.Obstacles.NextWaypointIndexComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceNextWaypointIndex(int newValue) {
        var index = GameComponentsLookup.NextWaypointIndex;
        var component = (SemoGames.Obstacles.NextWaypointIndexComponent)CreateComponent(index, typeof(SemoGames.Obstacles.NextWaypointIndexComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveNextWaypointIndex() {
        RemoveComponent(GameComponentsLookup.NextWaypointIndex);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherNextWaypointIndex;

    public static Entitas.IMatcher<GameEntity> NextWaypointIndex {
        get {
            if (_matcherNextWaypointIndex == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.NextWaypointIndex);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherNextWaypointIndex = matcher;
            }

            return _matcherNextWaypointIndex;
        }
    }
}
