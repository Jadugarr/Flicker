//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity pauseTimeEndedEntity { get { return GetGroup(GameMatcher.PauseTimeEnded).GetSingleEntity(); } }
    public SemoGames.Pause.PauseTimeEndedComponent pauseTimeEnded { get { return pauseTimeEndedEntity.pauseTimeEnded; } }
    public bool hasPauseTimeEnded { get { return pauseTimeEndedEntity != null; } }

    public GameEntity SetPauseTimeEnded(float newValue) {
        if (hasPauseTimeEnded) {
            throw new Entitas.EntitasException("Could not set PauseTimeEnded!\n" + this + " already has an entity with SemoGames.Pause.PauseTimeEndedComponent!",
                "You should check if the context already has a pauseTimeEndedEntity before setting it or use context.ReplacePauseTimeEnded().");
        }
        var entity = CreateEntity();
        entity.AddPauseTimeEnded(newValue);
        return entity;
    }

    public void ReplacePauseTimeEnded(float newValue) {
        var entity = pauseTimeEndedEntity;
        if (entity == null) {
            entity = SetPauseTimeEnded(newValue);
        } else {
            entity.ReplacePauseTimeEnded(newValue);
        }
    }

    public void RemovePauseTimeEnded() {
        pauseTimeEndedEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SemoGames.Pause.PauseTimeEndedComponent pauseTimeEnded { get { return (SemoGames.Pause.PauseTimeEndedComponent)GetComponent(GameComponentsLookup.PauseTimeEnded); } }
    public bool hasPauseTimeEnded { get { return HasComponent(GameComponentsLookup.PauseTimeEnded); } }

    public void AddPauseTimeEnded(float newValue) {
        var index = GameComponentsLookup.PauseTimeEnded;
        var component = (SemoGames.Pause.PauseTimeEndedComponent)CreateComponent(index, typeof(SemoGames.Pause.PauseTimeEndedComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePauseTimeEnded(float newValue) {
        var index = GameComponentsLookup.PauseTimeEnded;
        var component = (SemoGames.Pause.PauseTimeEndedComponent)CreateComponent(index, typeof(SemoGames.Pause.PauseTimeEndedComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePauseTimeEnded() {
        RemoveComponent(GameComponentsLookup.PauseTimeEnded);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPauseTimeEnded;

    public static Entitas.IMatcher<GameEntity> PauseTimeEnded {
        get {
            if (_matcherPauseTimeEnded == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PauseTimeEnded);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPauseTimeEnded = matcher;
            }

            return _matcherPauseTimeEnded;
        }
    }
}
