//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SemoGames.GameTransition.SceneToRemoveComponent sceneToRemove { get { return (SemoGames.GameTransition.SceneToRemoveComponent)GetComponent(GameComponentsLookup.SceneToRemove); } }
    public bool hasSceneToRemove { get { return HasComponent(GameComponentsLookup.SceneToRemove); } }

    public void AddSceneToRemove(string newValue) {
        var index = GameComponentsLookup.SceneToRemove;
        var component = (SemoGames.GameTransition.SceneToRemoveComponent)CreateComponent(index, typeof(SemoGames.GameTransition.SceneToRemoveComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSceneToRemove(string newValue) {
        var index = GameComponentsLookup.SceneToRemove;
        var component = (SemoGames.GameTransition.SceneToRemoveComponent)CreateComponent(index, typeof(SemoGames.GameTransition.SceneToRemoveComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSceneToRemove() {
        RemoveComponent(GameComponentsLookup.SceneToRemove);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSceneToRemove;

    public static Entitas.IMatcher<GameEntity> SceneToRemove {
        get {
            if (_matcherSceneToRemove == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SceneToRemove);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSceneToRemove = matcher;
            }

            return _matcherSceneToRemove;
        }
    }
}
